function [y1] = NNF_BysO3(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 05-May-2020 23:33:44.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = Qx11 matrix, input #1
% and returns:
%   y = Qx1 matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [4;5;0.2;0;2;0;0.1;996.6;0;-4;10];
x1_step1.gain = [0.00809716599190283;0.00400801603206413;0.740740740740741;0.0121212121212121;0.00181653042688465;0.00826446280991736;0.5;0.0461893764434179;0.00640820249919897;0.0476190476190476;0.0222222222222222];
x1_step1.ymin = -1;

% Layer 1
b1 = [-0.27198808922316214387;-0.23812135368307221772;0.2260160336626609312;-0.052606441258409721018;-0.28334477364454851989;-0.8547099367615993426;-0.02259204160325113675;-0.85398974460187904167;0.93223629708651978287;-0.16339632211278656837;-0.49073352600452097017;0.48856890072859732177;-1.2034286442129324968];
IW1_1 = [1.1119570075870781611 -1.1830109869332201544 0.35105781357584020519 -0.15373569316973617616 0.37088135558470031183 0.78464178342477641781 0.32708608213628265204 -0.74275585664697130195 0.35664108506709329971 1.359540167985014536 -0.14200045131857974567;0.55938866302075662684 -0.88659241160540336324 -0.0018527177678063231139 0.11525387555459561117 -0.019641822027999255446 -0.63883280145493692714 -0.23529426244695261783 0.24858111971322208178 -0.20652202626288138076 -1.1354105674956311844 -0.21250913238738447508;-0.55859731305717141847 0.35413128160615747753 0.12145362470407393418 0.26477182781826019697 -0.6865299688704364911 1.7402180396508668547 -0.12788398175233794962 0.73709613683346697499 0.20989130888637722028 0.45640295354647814063 0.29602289338843190691;-0.18717560599221672035 0.53655431101994988108 0.24425301921439407371 0.90039955581630293224 -0.31517384434494588596 0.41056268170376641891 0.051769908170576701967 0.1007416953680782129 -0.77514061912060405746 0.16446851354504715692 0.67313592508357755761;-0.331502970145861664 0.29527112171015135189 0.12231256471889533077 0.022770204522057517493 -0.090467710368210441096 -0.62665938793973008369 0.54425726273690910872 0.12310456159256141784 0.36256703855718841467 0.46679562492352288938 0.62323530083342515429;0.43182560395570618317 -0.4821194817754286821 0.38237982465622089023 0.84886395314065687945 0.169756066965111585 -0.88897584156555986556 -0.42684524278353525029 0.36758820540931719245 0.27913827970139709622 0.28255237646114134131 0.34674259276919627837;1.2522450391604638131 -1.2200274424410326723 -0.42440430666899608969 0.0014468643895064331462 -0.22703300950756977183 -0.80336475806824803048 0.064025290067852735909 -0.6955842807378407322 0.44891179207235798465 -0.1038793397674711988 -1.0260006239726011668;-1.0587292658920663957 0.42456726021858681719 -0.098909889501525849465 0.26973232017079945555 0.41375991397386863158 0.95409535217536933782 -0.036721171095916327332 0.43163645739599942885 0.51663951230528615266 0.061926984817230516789 1.190556171934353813;0.15880061665892358791 0.099813441140413905472 1.0563077847928767916 1.0768900846625737433 -0.94171164609656632383 -0.85136911336715537235 -0.20596320517456162547 -0.21722729045080707566 0.57608178119775144133 -0.33258242199134124828 0.050254161619179893439;0.016892746688822225104 -0.85985483609962198859 1.0363743764730857233 0.25180553972238323146 0.28850906895653721795 -0.80679850505289529838 -0.60543977236949408915 0.71154077105110402623 -0.13594898231636712294 -1.986092712059363441 -0.23798127150209011371;-0.80666941072841058524 0.51497703579723486111 -0.69746222427399873212 -1.417461576728674677 0.25943733229460991252 -1.2549758116345028913 -0.12859049918067380625 0.16394740576714744718 1.230425380868367613 -0.13961413518756921048 -1.0593580394135724276;-0.42512134916155625008 0.81572228536220114936 1.0646801872425946112 0.0016767583425651385633 -0.084503754771543496127 -0.66570825451940351947 0.04045354392369631541 0.89329285987265771851 0.0073803824057282509108 1.4422258543927892749 0.20472973155853621541;0.4693396553284476802 -0.040914407347194724218 -0.062053972019554155815 -0.29175987808739689555 -0.14802786295502712299 -1.2698653145765541606 0.06684578470652273452 -0.31575210989189678168 -0.71445243684621728697 0.28825830991438122775 -0.6469310179925791271];

% Layer 2
b2 = -0.12104847413780009391;
LW2_1 = [1.1710958060123277669 1.9565098016699529193 -1.0053100280746571915 1.8628752816603948439 -1.0248403803672585521 -1.3966013792109417402 1.5119758959612645821 1.7653685132570480221 -1.1761729153718920582 -0.5933690945978681297 0.71536737717116827273 1.5217088374343166191 -1.7923846745064839769];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 0.00775193798449612;
y1_step1.xoffset = 1;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,1); % samples

% Input 1
x1 = x1';
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
y1 = y1';
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
